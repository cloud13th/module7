module Paint.Test where

import Daml.Script
import Paint.Account
import Paint.Painting

test_painting : Script ()
test_painting = script do
  -- create some parties
  let names = ["UN Bank", "Alice", "Bob"]
  parties <- mapA (\name -> allocateParty name) names
  let all@[bank, alice, bob] = map (identity) parties
  -- allocate accounts for them
  accounts <- mapA (\party ->
    submit party do 
      createCmd Account with
        owner = party
        balance = 10000.0
        receivers = []
        payers = []
      ) parties
  -- alice create a painting task and allocate it to bob
  (paintingCid, billProposalCid) <- submit alice do
    createAndExerciseCmd
      PaintingProposal with owner = alice
      InitPaintingTask with intermediary = bank, worker = bob, salary = 450.0
  -- bob accept the job
  
  
  -- bank create a bill depends on the job
  
  -- bob begain to do the job

  -- bank pre-transfer the money from alice to bank

  -- bob finishs the job

  -- alice confirms the job

  -- bank transfer money to bob and make the bill done

  pure()