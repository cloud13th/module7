module Paint.Test where

import Daml.Script
import Paint.Account
import Paint.Painting

test_painting : Script ()
test_painting = script do
  -- create some parties
  let names = ["UN Bank", "Alice", "Bob"]
  parties <- mapA (\name -> allocateParty name) names
  let all@[bank, alice, bob] = map (identity) parties
  -- allocate accounts for them
  accounts <- mapA (\party ->
    submit party do 
      createCmd Account with
        owner = party
        balance = 10000.0
        receivers = []
        payers = []
      ) parties
  -- alice create a painting task and allocate it to bob
  initPaintCid <- submit alice do
    createCmd Painting with
      housekeeper = alice
      worker = bob
      salary = 500.0
      status = P_INIT
  -- bob accept the job
  startPaintCid <- submit bob do
    exerciseCmd initPaintCid Start
  -- bank create a bill depends on the job
  
  -- bob begain to do the job
  progressPaintCid <- submit bob do
    exerciseCmd startPaintCid Progress

  -- bank pre-transfer the money from alice to bank

  -- bob finishs the job

  -- alice confirms the job

  -- bank transfer money to bob and make the bill done

  pure()